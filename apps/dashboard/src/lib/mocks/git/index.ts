export const GIT_IDS: { [key: string]: string } = {
  GIT_NEWFILES: 'GIT_NEWFILES',
  GIT_STAGING: 'GIT_STAGING',
  GIT_COMMIT: 'GIT_COMMIT',
  GIT_AMEND: 'GIT_AMEND',
  GIT_BRANCH: 'GIT_BRANCH',
  GIT_BRANCHMERGE: 'GIT_BRANCHMERGE',
  GIT_PULL: 'GIT_PULL',
  GIT_PUSH: 'GIT_PUSH',
  GIT_GITHUBBRANCH: 'GIT_GITHUBBRANCH',
  GIT_BRANCHPULL: 'GIT_BRANCHPULL',
  GIT_BRANCHPUSH: 'GIT_BRANCHPUSH',
  GIT_GITHUBFLOW: 'GIT_GITHUBFLOW',
  GIT_GITHUBPAGES: 'GIT_GITHUBPAGES',
  GIT_GITHUBFORK: 'GIT_GITHUBFORK',
  GIT_CLONE: 'GIT_CLONE',
  GIT_PULLREQUEST: 'GIT_PULLREQUEST',
  GIT_IGNORE: 'GIT_IGNORE',
  GIT_SSH: 'GIT_SSH',
  GIT_REVERT: 'GIT_REVERT',
  GIT_RESET: 'GIT_RESET'
};

export const GIT_TEMPLATES = {
  [GIT_IDS.GIT_NEWFILES]: async () => (await import('./001_git_newFiles')).default,
  [GIT_IDS.GIT_STAGING]: async () => (await import('./002_git_staging')).default,
  [GIT_IDS.GIT_COMMIT]: async () => (await import('./003_git_commit')).default,
  [GIT_IDS.GIT_AMEND]: async () => (await import('./004_git_amend')).default,
  [GIT_IDS.GIT_BRANCH]: async () => (await import('./005_git_branch')).default,
  [GIT_IDS.GIT_BRANCHMERGE]: async () => (await import('./006_git_branchMerge')).default,
  [GIT_IDS.GIT_PULL]: async () => (await import('./007_git_pull')).default,
  [GIT_IDS.GIT_PUSH]: async () => (await import('./008_git_push')).default,
  [GIT_IDS.GIT_GITHUBBRANCH]: async () => (await import('./009_git_githubBranch')).default,
  [GIT_IDS.GIT_BRANCHPULL]: async () => (await import('./010_git_branchPull')).default,
  [GIT_IDS.GIT_BRANCHPUSH]: async () => (await import('./011_git_branchPush')).default,
  [GIT_IDS.GIT_GITHUBFLOW]: async () => (await import('./012_git_githubFlow')).default,
  [GIT_IDS.GIT_GITHUBPAGES]: async () => (await import('./013_git_githubPages')).default,
  [GIT_IDS.GIT_GITHUBFORK]: async () => (await import('./014_git_githubFork')).default,
  [GIT_IDS.GIT_CLONE]: async () => (await import('./015_git_clone')).default,
  [GIT_IDS.GIT_PULLREQUEST]: async () => (await import('./016_git_pullRequest')).default,
  [GIT_IDS.GIT_IGNORE]: async () => (await import('./017_git_ignore')).default,
  [GIT_IDS.GIT_SSH]: async () => (await import('./018_gitSsh')).default,
  [GIT_IDS.GIT_REVERT]: async () => (await import('./019_git_revert')).default,
  [GIT_IDS.GIT_RESET]: async () => (await import('./020_git_reset')).default
};
